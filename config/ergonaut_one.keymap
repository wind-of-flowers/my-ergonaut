#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick-tap-ms = <200>; };

&mt { quick-tap-ms = <200>; };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        lang {
            bindings = <&kp LA(LEFT_SHIFT)>;
            key-positions = <19 20>;
        };
    };

    macros {
        doublequote: doublequote {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LEFT_SHIFT) &kp LS(SINGLE_QUOTE) &kp LA(LEFT_SHIFT)>;
            label = "DOUBLEQUOTE";
        };

        singlequote: singlequote {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LEFT_SHIFT) &kp SINGLE_QUOTE &kp LA(LEFT_SHIFT)>;
            label = "SINGLEQUOTE";
        };

        leftsqurebracket: leftsqurebracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LEFT_SHIFT) &kp LEFT_BRACKET &kp LA(RIGHT_SHIFT)>;
            label = "LEFTSQUREBRACKET";
        };

        rightsquarebracket: rightsquarebracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LEFT_SHIFT) &kp RIGHT_BRACKET &kp LA(LEFT_SHIFT)>;
            label = "RIGHTSQUAREBRACKET";
        };

        leftbracketstrange: leftbracketstrange {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LEFT_SHIFT) &kp LS(LEFT_BRACKET) &kp LA(LEFT_SHIFT)>;
            label = "LEFTBRACKETSTRANGE";
        };

        rightbracketstrange: rightbracketstrange {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LEFT_SHIFT) &kp LS(RIGHT_BRACKET) &kp LA(LEFT_SHIFT)>;
            label = "RIGHTBRACKETSTRANGE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E       &kp R        &kp T                         &kp Y                   &kp U        &kp I        &kp O    &kp P     &kp LBKT
&kp LCTRL  &kp A  &kp S  &kp D       &kp F        &kp G                         &kp H                   &kp J        &kp K        &kp L    &kp SEMI  &kp SINGLE_QUOTE
&kp LALT   &kp Z  &kp X  &kp C       &kp V        &kp B                         &kp N                   &kp M        &kp COMMA    &kp DOT  &kp FSLH  &kp LC(Z)
                         &kp ESCAPE  &lt 1 SPACE  &mt LEFT_SHIFT LC(BACKSPACE)  &mt LEFT_WIN BACKSPACE  &lt 2 ENTER  &lt RSE DEL
            >;
        };

        lower_layer {
            bindings = <
&kp LGUI   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3   &kp NUMBER_4         &kp NUMBER_5       &kp NUMBER_6         &kp NUMBER_7          &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &kp F12
&kp LCTRL  &kp EXCL      &kp AT        &kp HASH       &kp DLLR             &kp PRCNT          &kp CARET            &kp AMPS              &kp STAR      &kp LPAR      &kp RPAR      &mt RCTRL MINUS
&kp LALT   &doublequote  &kp MINUS     &kp LS(SLASH)  &leftbracketstrange  &leftsqurebracket  &rightsquarebracket  &rightbracketstrange  &kp SLASH     &kp EQUAL     &singlequote  &kp RALT
                                       &trans         &trans               &trans             &kp DEL              &trans                &trans
            >;
        };

        raise_layer {
            bindings = <
&mt LGUI KP_NUM  &kp LC(PAGE_UP)  &kp LC(PAGE_DOWN)  &kp KP_N8  &kp KP_N9  &kp LS(HOME)      &kp RS(END)        &kp PAGE_UP  &kp UP_ARROW  &kp PAGE_DOWN  &kp PRINTSCREEN  &kp RIGHT_BRACKET
&kp LCTRL        &kp KP_MULTIPLY  &kp KP_N4          &kp KP_N5  &kp KP_N6  &kp HOME          &kp END            &kp LEFT     &kp DOWN      &kp RIGHT      &kp INS          &mt RCTRL K_APP
&kp LALT         &kp KP_N0        &kp LS(MINUS)      &kp KP_N2  &kp KP_N3  &kp LC(LS(LEFT))  &kp LC(LS(RIGHT))  &kp END      &kp DOWN      &kp LS(EQUAL)  &kp PAUSE_BREAK  &kp LC(LS(Z))
                                                     &trans     &trans     &trans            &trans             &trans       &trans
            >;
        };

        adjust_layer {
            bindings = <
&kp F11     &kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6        &kp F7        &kp F8        &kp F9        &kp F10       &kp F12
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&sys_reset  &none         &none         &none         &none         &bootloader   &none         &none         &none         &none         &none         &sys_reset
                                        &trans        &none         &trans        &none         &trans        &trans
            >;
        };
    };
};
